|two_boards_DE10_Lite_wr
MAX10_CLK1_50 => MAX10_CLK1_50.IN2
SW[0] => Mod3.IN11
SW[0] => Div2.IN11
SW[0] => Div3.IN14
SW[0] => data_transmit.DATAB
SW[1] => Mod3.IN10
SW[1] => Div2.IN10
SW[1] => Div3.IN13
SW[1] => data_transmit.DATAB
SW[2] => Mod3.IN9
SW[2] => Div2.IN9
SW[2] => Div3.IN12
SW[2] => data_transmit.DATAB
SW[3] => Mod3.IN8
SW[3] => Div2.IN8
SW[3] => Div3.IN11
SW[3] => data_transmit.DATAB
SW[4] => Mod3.IN7
SW[4] => Div2.IN7
SW[4] => Div3.IN10
SW[4] => data_transmit.DATAB
SW[5] => Mod3.IN6
SW[5] => Div2.IN6
SW[5] => Div3.IN9
SW[5] => data_transmit.DATAB
SW[6] => Mod3.IN5
SW[6] => Div2.IN5
SW[6] => Div3.IN8
SW[6] => data_transmit.DATAB
SW[7] => Mod3.IN4
SW[7] => Div2.IN4
SW[7] => Div3.IN7
SW[7] => data_transmit.DATAB
SW[8] => ~NO_FANOUT~
SW[9] => data_transmit.OUTPUTSELECT
SW[9] => data_transmit.OUTPUTSELECT
SW[9] => data_transmit.OUTPUTSELECT
SW[9] => data_transmit.OUTPUTSELECT
SW[9] => data_transmit.OUTPUTSELECT
SW[9] => data_transmit.OUTPUTSELECT
SW[9] => data_transmit.OUTPUTSELECT
SW[9] => data_transmit.OUTPUTSELECT
KEY[0] => KEY[0].IN2
KEY[1] => ~NO_FANOUT~
ARDUINO_IO[0] <> TOP:BOARD1.Tx
ARDUINO_IO[1] <> TOP:BOARD2.Rx
ARDUINO_IO[2] <> <UNC>
ARDUINO_IO[3] <> <UNC>
ARDUINO_IO[4] <> <UNC>
ARDUINO_IO[5] <> <UNC>
ARDUINO_IO[6] <> <UNC>
ARDUINO_IO[7] <> <UNC>
ARDUINO_IO[8] <> <UNC>
ARDUINO_IO[9] <> <UNC>
LEDR[0] << <GND>
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
HEX0[0] << segmentos_7:RECEIVER_DISPLAY1.data_segmentos_out
HEX0[1] << segmentos_7:RECEIVER_DISPLAY1.data_segmentos_out
HEX0[2] << segmentos_7:RECEIVER_DISPLAY1.data_segmentos_out
HEX0[3] << segmentos_7:RECEIVER_DISPLAY1.data_segmentos_out
HEX0[4] << segmentos_7:RECEIVER_DISPLAY1.data_segmentos_out
HEX0[5] << segmentos_7:RECEIVER_DISPLAY1.data_segmentos_out
HEX0[6] << segmentos_7:RECEIVER_DISPLAY1.data_segmentos_out
HEX1[0] << segmentos_7:RECEIVER_DISPLAY2.data_segmentos_out
HEX1[1] << segmentos_7:RECEIVER_DISPLAY2.data_segmentos_out
HEX1[2] << segmentos_7:RECEIVER_DISPLAY2.data_segmentos_out
HEX1[3] << segmentos_7:RECEIVER_DISPLAY2.data_segmentos_out
HEX1[4] << segmentos_7:RECEIVER_DISPLAY2.data_segmentos_out
HEX1[5] << segmentos_7:RECEIVER_DISPLAY2.data_segmentos_out
HEX1[6] << segmentos_7:RECEIVER_DISPLAY2.data_segmentos_out
HEX2[0] << segmentos_7:RECEIVER_DISPLAY3.data_segmentos_out
HEX2[1] << segmentos_7:RECEIVER_DISPLAY3.data_segmentos_out
HEX2[2] << segmentos_7:RECEIVER_DISPLAY3.data_segmentos_out
HEX2[3] << segmentos_7:RECEIVER_DISPLAY3.data_segmentos_out
HEX2[4] << segmentos_7:RECEIVER_DISPLAY3.data_segmentos_out
HEX2[5] << segmentos_7:RECEIVER_DISPLAY3.data_segmentos_out
HEX2[6] << segmentos_7:RECEIVER_DISPLAY3.data_segmentos_out
HEX3[0] << segmentos_7:TRANSMITER_DISPLAY1.data_segmentos_out
HEX3[1] << segmentos_7:TRANSMITER_DISPLAY1.data_segmentos_out
HEX3[2] << segmentos_7:TRANSMITER_DISPLAY1.data_segmentos_out
HEX3[3] << segmentos_7:TRANSMITER_DISPLAY1.data_segmentos_out
HEX3[4] << segmentos_7:TRANSMITER_DISPLAY1.data_segmentos_out
HEX3[5] << segmentos_7:TRANSMITER_DISPLAY1.data_segmentos_out
HEX3[6] << segmentos_7:TRANSMITER_DISPLAY1.data_segmentos_out
HEX4[0] << segmentos_7:TRANSMITER_DISPLAY2.data_segmentos_out
HEX4[1] << segmentos_7:TRANSMITER_DISPLAY2.data_segmentos_out
HEX4[2] << segmentos_7:TRANSMITER_DISPLAY2.data_segmentos_out
HEX4[3] << segmentos_7:TRANSMITER_DISPLAY2.data_segmentos_out
HEX4[4] << segmentos_7:TRANSMITER_DISPLAY2.data_segmentos_out
HEX4[5] << segmentos_7:TRANSMITER_DISPLAY2.data_segmentos_out
HEX4[6] << segmentos_7:TRANSMITER_DISPLAY2.data_segmentos_out
HEX5[0] << segmentos_7:TRANSMITER_DISPLAY3.data_segmentos_out
HEX5[1] << segmentos_7:TRANSMITER_DISPLAY3.data_segmentos_out
HEX5[2] << segmentos_7:TRANSMITER_DISPLAY3.data_segmentos_out
HEX5[3] << segmentos_7:TRANSMITER_DISPLAY3.data_segmentos_out
HEX5[4] << segmentos_7:TRANSMITER_DISPLAY3.data_segmentos_out
HEX5[5] << segmentos_7:TRANSMITER_DISPLAY3.data_segmentos_out
HEX5[6] << segmentos_7:TRANSMITER_DISPLAY3.data_segmentos_out


|two_boards_DE10_Lite_wr|segmentos_7:RECEIVER_DISPLAY1
data_segmentos_in[0] => Decoder0.IN7
data_segmentos_in[1] => Decoder0.IN6
data_segmentos_in[2] => Decoder0.IN5
data_segmentos_in[3] => Decoder0.IN4
data_segmentos_in[4] => Decoder0.IN3
data_segmentos_in[5] => Decoder0.IN2
data_segmentos_in[6] => Decoder0.IN1
data_segmentos_in[7] => Decoder0.IN0
data_segmentos_out[0] <= data_segmentos_out.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|two_boards_DE10_Lite_wr|segmentos_7:RECEIVER_DISPLAY2
data_segmentos_in[0] => Decoder0.IN7
data_segmentos_in[1] => Decoder0.IN6
data_segmentos_in[2] => Decoder0.IN5
data_segmentos_in[3] => Decoder0.IN4
data_segmentos_in[4] => Decoder0.IN3
data_segmentos_in[5] => Decoder0.IN2
data_segmentos_in[6] => Decoder0.IN1
data_segmentos_in[7] => Decoder0.IN0
data_segmentos_out[0] <= data_segmentos_out.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|two_boards_DE10_Lite_wr|segmentos_7:RECEIVER_DISPLAY3
data_segmentos_in[0] => Decoder0.IN7
data_segmentos_in[1] => Decoder0.IN6
data_segmentos_in[2] => Decoder0.IN5
data_segmentos_in[3] => Decoder0.IN4
data_segmentos_in[4] => Decoder0.IN3
data_segmentos_in[5] => Decoder0.IN2
data_segmentos_in[6] => Decoder0.IN1
data_segmentos_in[7] => Decoder0.IN0
data_segmentos_out[0] <= data_segmentos_out.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|two_boards_DE10_Lite_wr|segmentos_7:TRANSMITER_DISPLAY1
data_segmentos_in[0] => Decoder0.IN7
data_segmentos_in[1] => Decoder0.IN6
data_segmentos_in[2] => Decoder0.IN5
data_segmentos_in[3] => Decoder0.IN4
data_segmentos_in[4] => Decoder0.IN3
data_segmentos_in[5] => Decoder0.IN2
data_segmentos_in[6] => Decoder0.IN1
data_segmentos_in[7] => Decoder0.IN0
data_segmentos_out[0] <= data_segmentos_out.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|two_boards_DE10_Lite_wr|segmentos_7:TRANSMITER_DISPLAY2
data_segmentos_in[0] => Decoder0.IN7
data_segmentos_in[1] => Decoder0.IN6
data_segmentos_in[2] => Decoder0.IN5
data_segmentos_in[3] => Decoder0.IN4
data_segmentos_in[4] => Decoder0.IN3
data_segmentos_in[5] => Decoder0.IN2
data_segmentos_in[6] => Decoder0.IN1
data_segmentos_in[7] => Decoder0.IN0
data_segmentos_out[0] <= data_segmentos_out.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|two_boards_DE10_Lite_wr|segmentos_7:TRANSMITER_DISPLAY3
data_segmentos_in[0] => Decoder0.IN7
data_segmentos_in[1] => Decoder0.IN6
data_segmentos_in[2] => Decoder0.IN5
data_segmentos_in[3] => Decoder0.IN4
data_segmentos_in[4] => Decoder0.IN3
data_segmentos_in[5] => Decoder0.IN2
data_segmentos_in[6] => Decoder0.IN1
data_segmentos_in[7] => Decoder0.IN0
data_segmentos_out[0] <= data_segmentos_out.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
data_segmentos_out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|two_boards_DE10_Lite_wr|TOP:BOARD1
Clk => Clk.IN3
Rst_n => Rst_n.IN3
Rx => Rx.IN1
Tx <= UART_rs232_tx:I_RS232TX.Tx
RxData[0] <= UART_rs232_rx:I_RS232RX.RxData
RxData[1] <= UART_rs232_rx:I_RS232RX.RxData
RxData[2] <= UART_rs232_rx:I_RS232RX.RxData
RxData[3] <= UART_rs232_rx:I_RS232RX.RxData
RxData[4] <= UART_rs232_rx:I_RS232RX.RxData
RxData[5] <= UART_rs232_rx:I_RS232RX.RxData
RxData[6] <= UART_rs232_rx:I_RS232RX.RxData
RxData[7] <= UART_rs232_rx:I_RS232RX.RxData
TxData[0] => TxData[0].IN1
TxData[1] => TxData[1].IN1
TxData[2] => TxData[2].IN1
TxData[3] => TxData[3].IN1
TxData[4] => TxData[4].IN1
TxData[5] => TxData[5].IN1
TxData[6] => TxData[6].IN1
TxData[7] => TxData[7].IN1


|two_boards_DE10_Lite_wr|TOP:BOARD1|UART_rs232_rx:I_RS232RX
Clk => RxData[0]~reg0.CLK
Clk => RxData[1]~reg0.CLK
Clk => RxData[2]~reg0.CLK
Clk => RxData[3]~reg0.CLK
Clk => RxData[4]~reg0.CLK
Clk => RxData[5]~reg0.CLK
Clk => RxData[6]~reg0.CLK
Clk => RxData[7]~reg0.CLK
Clk => State~1.DATAIN
Rst_n => State~3.DATAIN
RxEn => always1.IN0
RxData[0] <= RxData[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[1] <= RxData[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[2] <= RxData[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[3] <= RxData[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[4] <= RxData[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[5] <= RxData[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[6] <= RxData[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[7] <= RxData[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxDone <= RxDone~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rx => Read_data.DATAB
Rx => always3.IN1
Rx => always1.IN1
Tick => Read_data[0].CLK
Tick => Read_data[1].CLK
Tick => Read_data[2].CLK
Tick => Read_data[3].CLK
Tick => Read_data[4].CLK
Tick => Read_data[5].CLK
Tick => Read_data[6].CLK
Tick => Read_data[7].CLK
Tick => Bit[0].CLK
Tick => Bit[1].CLK
Tick => Bit[2].CLK
Tick => Bit[3].CLK
Tick => Bit[4].CLK
Tick => start_bit.CLK
Tick => counter[0].CLK
Tick => counter[1].CLK
Tick => counter[2].CLK
Tick => counter[3].CLK
Tick => RxDone~reg0.CLK
NBits[0] => LessThan0.IN5
NBits[0] => Equal2.IN4
NBits[0] => Equal3.IN3
NBits[0] => Equal4.IN2
NBits[0] => Equal5.IN3
NBits[1] => LessThan0.IN4
NBits[1] => Equal2.IN3
NBits[1] => Equal3.IN2
NBits[1] => Equal4.IN1
NBits[1] => Equal5.IN1
NBits[2] => LessThan0.IN3
NBits[2] => Equal2.IN2
NBits[2] => Equal3.IN1
NBits[2] => Equal4.IN0
NBits[2] => Equal5.IN0
NBits[3] => LessThan0.IN2
NBits[3] => Equal2.IN1
NBits[3] => Equal3.IN0
NBits[3] => Equal4.IN3
NBits[3] => Equal5.IN2


|two_boards_DE10_Lite_wr|TOP:BOARD1|UART_rs232_tx:I_RS232TX
Clk => R_edge[0].CLK
Clk => R_edge[1].CLK
Clk => State.CLK
Rst_n => R_edge[0].ACLR
Rst_n => R_edge[1].ACLR
Rst_n => State.ACLR
TxEn => R_edge[0].DATAIN
TxData[0] => in_data.DATAB
TxData[1] => in_data.DATAB
TxData[2] => in_data.DATAB
TxData[3] => in_data.DATAB
TxData[4] => in_data.DATAB
TxData[5] => in_data.DATAB
TxData[6] => in_data.DATAB
TxData[7] => in_data.DATAB
TxDone <= TxDone~reg0.DB_MAX_OUTPUT_PORT_TYPE
Tx <= Tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
Tick => Bit[0].CLK
Tick => Bit[1].CLK
Tick => Bit[2].CLK
Tick => Bit[3].CLK
Tick => Bit[4].CLK
Tick => in_data[0].CLK
Tick => in_data[1].CLK
Tick => in_data[2].CLK
Tick => in_data[3].CLK
Tick => in_data[4].CLK
Tick => in_data[5].CLK
Tick => in_data[6].CLK
Tick => in_data[7].CLK
Tick => Tx~reg0.CLK
Tick => counter[0].CLK
Tick => counter[1].CLK
Tick => counter[2].CLK
Tick => counter[3].CLK
Tick => stop_bit.CLK
Tick => start_bit.CLK
Tick => TxDone~reg0.CLK
NBits[0] => Add2.IN8
NBits[1] => Add2.IN7
NBits[2] => Add2.IN6
NBits[3] => Add2.IN5


|two_boards_DE10_Lite_wr|TOP:BOARD1|UART_BaudRate_generator:I_BAUDGEN
Clk => baudRateReg[0].CLK
Clk => baudRateReg[1].CLK
Clk => baudRateReg[2].CLK
Clk => baudRateReg[3].CLK
Clk => baudRateReg[4].CLK
Clk => baudRateReg[5].CLK
Clk => baudRateReg[6].CLK
Clk => baudRateReg[7].CLK
Clk => baudRateReg[8].CLK
Clk => baudRateReg[9].CLK
Clk => baudRateReg[10].CLK
Clk => baudRateReg[11].CLK
Clk => baudRateReg[12].CLK
Clk => baudRateReg[13].CLK
Clk => baudRateReg[14].CLK
Clk => baudRateReg[15].CLK
Rst_n => baudRateReg[0].PRESET
Rst_n => baudRateReg[1].ACLR
Rst_n => baudRateReg[2].ACLR
Rst_n => baudRateReg[3].ACLR
Rst_n => baudRateReg[4].ACLR
Rst_n => baudRateReg[5].ACLR
Rst_n => baudRateReg[6].ACLR
Rst_n => baudRateReg[7].ACLR
Rst_n => baudRateReg[8].ACLR
Rst_n => baudRateReg[9].ACLR
Rst_n => baudRateReg[10].ACLR
Rst_n => baudRateReg[11].ACLR
Rst_n => baudRateReg[12].ACLR
Rst_n => baudRateReg[13].ACLR
Rst_n => baudRateReg[14].ACLR
Rst_n => baudRateReg[15].ACLR
Tick <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
BaudRate[0] => Equal0.IN15
BaudRate[1] => Equal0.IN14
BaudRate[2] => Equal0.IN13
BaudRate[3] => Equal0.IN12
BaudRate[4] => Equal0.IN11
BaudRate[5] => Equal0.IN10
BaudRate[6] => Equal0.IN9
BaudRate[7] => Equal0.IN8
BaudRate[8] => Equal0.IN7
BaudRate[9] => Equal0.IN6
BaudRate[10] => Equal0.IN5
BaudRate[11] => Equal0.IN4
BaudRate[12] => Equal0.IN3
BaudRate[13] => Equal0.IN2
BaudRate[14] => Equal0.IN1
BaudRate[15] => Equal0.IN0


|two_boards_DE10_Lite_wr|TOP:BOARD2
Clk => Clk.IN3
Rst_n => Rst_n.IN3
Rx => Rx.IN1
Tx <= UART_rs232_tx:I_RS232TX.Tx
RxData[0] <= UART_rs232_rx:I_RS232RX.RxData
RxData[1] <= UART_rs232_rx:I_RS232RX.RxData
RxData[2] <= UART_rs232_rx:I_RS232RX.RxData
RxData[3] <= UART_rs232_rx:I_RS232RX.RxData
RxData[4] <= UART_rs232_rx:I_RS232RX.RxData
RxData[5] <= UART_rs232_rx:I_RS232RX.RxData
RxData[6] <= UART_rs232_rx:I_RS232RX.RxData
RxData[7] <= UART_rs232_rx:I_RS232RX.RxData
TxData[0] => TxData[0].IN1
TxData[1] => TxData[1].IN1
TxData[2] => TxData[2].IN1
TxData[3] => TxData[3].IN1
TxData[4] => TxData[4].IN1
TxData[5] => TxData[5].IN1
TxData[6] => TxData[6].IN1
TxData[7] => TxData[7].IN1


|two_boards_DE10_Lite_wr|TOP:BOARD2|UART_rs232_rx:I_RS232RX
Clk => RxData[0]~reg0.CLK
Clk => RxData[1]~reg0.CLK
Clk => RxData[2]~reg0.CLK
Clk => RxData[3]~reg0.CLK
Clk => RxData[4]~reg0.CLK
Clk => RxData[5]~reg0.CLK
Clk => RxData[6]~reg0.CLK
Clk => RxData[7]~reg0.CLK
Clk => State~1.DATAIN
Rst_n => State~3.DATAIN
RxEn => always1.IN0
RxData[0] <= RxData[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[1] <= RxData[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[2] <= RxData[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[3] <= RxData[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[4] <= RxData[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[5] <= RxData[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[6] <= RxData[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[7] <= RxData[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxDone <= RxDone~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rx => Read_data.DATAB
Rx => always3.IN1
Rx => always1.IN1
Tick => Read_data[0].CLK
Tick => Read_data[1].CLK
Tick => Read_data[2].CLK
Tick => Read_data[3].CLK
Tick => Read_data[4].CLK
Tick => Read_data[5].CLK
Tick => Read_data[6].CLK
Tick => Read_data[7].CLK
Tick => Bit[0].CLK
Tick => Bit[1].CLK
Tick => Bit[2].CLK
Tick => Bit[3].CLK
Tick => Bit[4].CLK
Tick => start_bit.CLK
Tick => counter[0].CLK
Tick => counter[1].CLK
Tick => counter[2].CLK
Tick => counter[3].CLK
Tick => RxDone~reg0.CLK
NBits[0] => LessThan0.IN5
NBits[0] => Equal2.IN4
NBits[0] => Equal3.IN3
NBits[0] => Equal4.IN2
NBits[0] => Equal5.IN3
NBits[1] => LessThan0.IN4
NBits[1] => Equal2.IN3
NBits[1] => Equal3.IN2
NBits[1] => Equal4.IN1
NBits[1] => Equal5.IN1
NBits[2] => LessThan0.IN3
NBits[2] => Equal2.IN2
NBits[2] => Equal3.IN1
NBits[2] => Equal4.IN0
NBits[2] => Equal5.IN0
NBits[3] => LessThan0.IN2
NBits[3] => Equal2.IN1
NBits[3] => Equal3.IN0
NBits[3] => Equal4.IN3
NBits[3] => Equal5.IN2


|two_boards_DE10_Lite_wr|TOP:BOARD2|UART_rs232_tx:I_RS232TX
Clk => R_edge[0].CLK
Clk => R_edge[1].CLK
Clk => State.CLK
Rst_n => R_edge[0].ACLR
Rst_n => R_edge[1].ACLR
Rst_n => State.ACLR
TxEn => R_edge[0].DATAIN
TxData[0] => in_data.DATAB
TxData[1] => in_data.DATAB
TxData[2] => in_data.DATAB
TxData[3] => in_data.DATAB
TxData[4] => in_data.DATAB
TxData[5] => in_data.DATAB
TxData[6] => in_data.DATAB
TxData[7] => in_data.DATAB
TxDone <= TxDone~reg0.DB_MAX_OUTPUT_PORT_TYPE
Tx <= Tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
Tick => Bit[0].CLK
Tick => Bit[1].CLK
Tick => Bit[2].CLK
Tick => Bit[3].CLK
Tick => Bit[4].CLK
Tick => in_data[0].CLK
Tick => in_data[1].CLK
Tick => in_data[2].CLK
Tick => in_data[3].CLK
Tick => in_data[4].CLK
Tick => in_data[5].CLK
Tick => in_data[6].CLK
Tick => in_data[7].CLK
Tick => Tx~reg0.CLK
Tick => counter[0].CLK
Tick => counter[1].CLK
Tick => counter[2].CLK
Tick => counter[3].CLK
Tick => stop_bit.CLK
Tick => start_bit.CLK
Tick => TxDone~reg0.CLK
NBits[0] => Add2.IN8
NBits[1] => Add2.IN7
NBits[2] => Add2.IN6
NBits[3] => Add2.IN5


|two_boards_DE10_Lite_wr|TOP:BOARD2|UART_BaudRate_generator:I_BAUDGEN
Clk => baudRateReg[0].CLK
Clk => baudRateReg[1].CLK
Clk => baudRateReg[2].CLK
Clk => baudRateReg[3].CLK
Clk => baudRateReg[4].CLK
Clk => baudRateReg[5].CLK
Clk => baudRateReg[6].CLK
Clk => baudRateReg[7].CLK
Clk => baudRateReg[8].CLK
Clk => baudRateReg[9].CLK
Clk => baudRateReg[10].CLK
Clk => baudRateReg[11].CLK
Clk => baudRateReg[12].CLK
Clk => baudRateReg[13].CLK
Clk => baudRateReg[14].CLK
Clk => baudRateReg[15].CLK
Rst_n => baudRateReg[0].PRESET
Rst_n => baudRateReg[1].ACLR
Rst_n => baudRateReg[2].ACLR
Rst_n => baudRateReg[3].ACLR
Rst_n => baudRateReg[4].ACLR
Rst_n => baudRateReg[5].ACLR
Rst_n => baudRateReg[6].ACLR
Rst_n => baudRateReg[7].ACLR
Rst_n => baudRateReg[8].ACLR
Rst_n => baudRateReg[9].ACLR
Rst_n => baudRateReg[10].ACLR
Rst_n => baudRateReg[11].ACLR
Rst_n => baudRateReg[12].ACLR
Rst_n => baudRateReg[13].ACLR
Rst_n => baudRateReg[14].ACLR
Rst_n => baudRateReg[15].ACLR
Tick <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
BaudRate[0] => Equal0.IN15
BaudRate[1] => Equal0.IN14
BaudRate[2] => Equal0.IN13
BaudRate[3] => Equal0.IN12
BaudRate[4] => Equal0.IN11
BaudRate[5] => Equal0.IN10
BaudRate[6] => Equal0.IN9
BaudRate[7] => Equal0.IN8
BaudRate[8] => Equal0.IN7
BaudRate[9] => Equal0.IN6
BaudRate[10] => Equal0.IN5
BaudRate[11] => Equal0.IN4
BaudRate[12] => Equal0.IN3
BaudRate[13] => Equal0.IN2
BaudRate[14] => Equal0.IN1
BaudRate[15] => Equal0.IN0


